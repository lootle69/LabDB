**DDL**
--CREATE--
	syntax - CREATE TABLE Persons (PersonID int,LastName varchar(255),Address varchar(255),City varchar(255));
--Alter--
	Syntax: ALTER TABLE table_name ADD column_name datatype;
	Example:ALTER TABLE Customers ADD Email varchar(255);
--Drop--
	Syntax: DROP TABLE table_name;
--Truncate--
	Syntax: TRUNCATE TABLE table_name;
--Rename--
	Example: RENAME table student to info;
________________________________________________________________________

**DML**
--select-- 
	sytax - select * from;
--Insert--
	Example: INSERT INTO Customers (CustomerName, ContactName, Address) VALUES('Cardinal', 'Tom B. Erichsen', 'Skagen 21');
--update--
	Example: UPDATE Customers SET ContactName = 'Alfred Schmidt'WHERE CustomerID = 1;
--Delete--
	Example: DELETE FROM Customers WHERE CustomerName='ABC';
____________________________________________________________________________

**VIEW**
Examples: CREATE VIEW v1 AS SELECT CustomerName, ContactName FROM Customers WHERE Country = 'Brazil';
 SELECT * FROM [Brazil Customers];
 extra - CREATE OR REPLACE (for replace view)

Droping view -
	Syntax: DROP VIEW view_name;

______________________________________________________________

**Constraints**

->NOT NULL - Example: CREATE TABLE Persons (ID int NOT NULL,FirstName varchar(255) NOT NULL, Age int);

->UNIQUE - Example: CREATE TABLE Persons (
								ID int NOT NULL,
								Age int,
								UNIQUE (ID));
		- UNIQUE Constraint on ALTER TABLE(One column)
				Example: ALTER TABLE Persons ADD UNIQUE (ID);

->Primary Key 
	Example: CREATE TABLE Persons (ID int NOT NULL,PRIMARY KEY (ID));

  -PRIMARY KEY on ALTER TABLE
		Example: ALTER TABLE Persons ADD PRIMARY KEY (ID);

-> FOREIGN KEY
		Example: CREATE TABLE Orders (PRIMARY KEY (OrderID),FOREIGN KEY (PersonID) REFERENCES Persons(PersonID));

    -FOREIGN KEY on ALTER TABLE
		Example: ALTER TABLE Orders ADD FOREIGN KEY (PersonID) REFERENCES Persons(PersonID);

->CHECK on ALTER TABLE (One column)
		Check on Create Table - CREATE TABLE Persons (CONSTRAINT CHK_Person CHECK (Age>=18 AND City='Sandnes'));
		Check on Alter table : ALTER TABLE Persons ADD CHECK (Age>=18);

-> DEFAULT on CREATE TABLE
		Example: CREATE TABLE Persons (Age int,City varchar(255) DEFAULT 'Sandnes');
_____________________________________________________________________________________________________


**JOIN**

1. INNER JOIN
  Syntax: SELECT column_name(s)
			FROM table1
			INNER JOIN table2
			ON table1.column_name = table2.column_name;
	Example: SELECT Orders.OrderID, Customers.CustomerName FROM Orders INNER JOIN Customers ON Orders.CustomerID = Customers.CustomerID;

2. LEFT JOIN (Outer)
	Syntax: SELECT column_name(s)
		FROM table1	
		LEFT JOIN table2
		ON table1.column_name = table2.column_name;
	Example: SELECT Customers.CustomerName, Orders.OrderID
		FROM Customers
		LEFT JOIN Orders ON Customers.CustomerID = Orders.CustomerID
		ORDER BY Customers.CustomerName;

3.Right Join

	Syntax: SELECT column_name(s)
		FROM table1
		RIGHT JOIN table2
		ON table1.column_name = table2.column_name;
	Example: SELECT Orders.OrderID, Employees.LastName, Employees.FirstName
		FROM Orders
		RIGHT JOIN Employees ON Orders.EmployeeID=Employees.EmployeeID
		ORDER BY Orders.OrderID;

4.Full Join 
	
	Syntax: SELECT column_name(s)
		FROM table1
		FULL OUTER JOIN table2
		ON table1.column_name = table2.column_name
		WHERE condition;
	Example: SELECT Customers.CustomerName, Orders.OrderID
		FROM Customers
		FULL OUTER JOIN Orders ON Customers.CustomerID=Orders.CustomerID
		ORDER BY Customers.CustomerName;

________________________________________________________________________________________________
